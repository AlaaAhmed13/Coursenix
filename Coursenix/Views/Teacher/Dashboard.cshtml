@* Views/Teacher/Dashboard.cshtml *@
@model Coursenix.Models.ViewModels.TeacherDashboardViewModel

@{
    ViewData["Title"] = $"{Model.Teacher?.Name} Dashboard";

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    @section css{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/material-design-icons/3.0.1/iconfont/material-icons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="@Url.Content("~/CSS/teacherDashboard.css")">
    }
</head>
<body>
    <nav class="navbar">
        <a href="@Url.Action("Index", "Home")" class="logo">
             <div style="color: #26a69a;">
                <i class="material-icons" style="font-size: 36px;">school</i>
            </div>
            <div class="logo-text">
                Eduvera
                <span>Learning Platform</span>
            </div>
        </a>

        <ul class="nav-links">
            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li><a href="@Url.Action("Index", "Courses")">Courses</a></li>
            <li><a href="#">Contact</a></li> 
            <li><a href="#">About</a></li> 
        </ul>

        @if (Model != null && Model.Teacher != null)
        {
             <div class="profile-dropdown">
                <button class="profile-btn">
                     @if (!string.IsNullOrEmpty(Model.Teacher.ProfilePicture))
                     {
                          <img src="@Url.Content($"~/images/teachers/{Model.Teacher.ProfilePicture}")" alt="Profile" class="profile-image">
                     }
                     else
                     {
                         <img src="@Url.Content("~/assets/teacher1.svg")" alt="Profile" class="profile-image"> 
                     }
                </button>
                <div class="dropdown-content">
                  <div class="dropdown-header">
                 
                     @if (!string.IsNullOrEmpty(Model.Teacher.ProfilePicture))
                     {
                          <img src="@Url.Content($"~/images/teachers/{Model.Teacher.ProfilePicture}")" alt="Profile" class="profile-image large">
                     }
                     else
                     {
                          <img src="@Url.Content("~/assets/teacher1.svg")" alt="Profile" class="profile-image large">
                     }
                    <div>
                      <h4>@(Model.Teacher.Name)</h4>
                    </div>
                  </div>
                  <hr>
                  <a href="#"><i class="fas fa-user"></i> View Profile</a>
                  <a href="#"><i class="fas fa-cog"></i> Settings</a> 
                  <hr>
                  <a href="#" class="sign_out"><i class="fas fa-sign-out-alt"></i> Sign-out</a> 
                </div>
             </div>
        }
        else
        {
             <div><a href="@Url.Action("Sign_In", "Teacher")">Sign In</a></div> 
        }
    </nav>

    <div class="main-content">
        <div class="section-title">Dashboard</div>

        <div class="stats-container">
             @if (Model != null)
             {
                 <div class="stat-card">
                     <div class="stat-icon student-icon">
                         <i class="material-icons">person</i>
                     </div>
                     <div class="stat-info">
                         <div class="stat-number">@Model.TotalStudents</div> 
                         <div class="stat-label">Students</div>
                     </div>
                 </div>
                 <div class="stat-card">
                     <div class="stat-icon course-icon">
                         <i class="material-icons">book</i>
                     </div>
                     <div class="stat-info">
                         <div class="stat-number">@Model.TotalCourses</div> 
                         <div class="stat-label">Courses</div>
                     </div>
                 </div>
                 <div class="stat-card">
                     <div class="stat-icon group-icon">
                         <i class="material-icons">group</i>
                     </div>
                     <div class="stat-info">
                         <div class="stat-number">@Model.TotalGroups</div> 
                         <div class="stat-label">Groups</div>
                     </div>
                 </div>
             }
             else
             {
                  <p>Loading stats...</p>
             }
        </div>

        @if (Model != null && Model.Teacher != null)
        {
             <div class="profile-card">
                 <div class="profile-img">
                      @if (!string.IsNullOrEmpty(Model.Teacher.ProfilePicture))
                      {
                           <img src="@Url.Content($"~/images/teachers/{Model.Teacher.ProfilePicture}")" alt="profile">
                      }
                      else
                      {
                          <img src="@Url.Content("~/assets/teacher1.svg")" alt="profile"> 
                      }
                 </div>
                 <div class="profile-info">
                     <h2>@(Model.Teacher.Name)</h2>
                     @*  @if (!string.IsNullOrEmpty(Model.Teacher.Biography))
                      {
                           <p>@Model.Teacher.Biography</p>
                      }
                      else
                      {
                         <p>Mathematics and Physics Teacher with 10+ years of experience</p> @* Static placeholder *|
                      } *@
                 </div>
             </div>
        }


        <div class="courses-container">
            <h1>My Courses</h1>

            <div class="courses-grid">
                @if (Model != null && Model.CoursesTaught != null && Model.CoursesTaught.Any())
                {
                    @foreach (var course in Model.CoursesTaught)
                    {
                        <div class="course-card">
                            <div class="course-image">
                                 @if (!string.IsNullOrEmpty(course.ThumbnailFileName)) 
                                 {
                                     <img src="@Url.Content($"~/images/thumbnails/{course.ThumbnailFileName}")" alt="@course.SubjectName">
                                 }
                                 else
                                 {
                                     <img src="@Url.Content("~/assets/course1.svg")" alt="@course.SubjectName"> 
                                 }
                            </div>
                            <div class="course-content">
                                <h3 class="course-title">@course.SubjectName</h3> 
                                <div class="course-meta">
                                    <span class="course-grade">Grades @course.GradeLevel</span>
                                    <span class="course-price">@course.Price.ToString("C")</span>
                                </div>
                                <p class="course-description">
                                     @course.Description 
                                </p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>You are not currently teaching any courses.</p>
                }

                 <div class="course-card add-course-card">
                     <div class="add-course-content">
                         <div class="add-icon">+</div>
                         <div class="add-text">Add New Course</div>
                     </div>
                 </div>

            </div>
        </div>

    <footer class="footer">
        <p>© 2025 Eduvera. All Rights reserved</p>
    </footer>
    @section Scrpipts{
    <script>
        document.querySelector('.profile-btn').addEventListener('click', function(e) {
            e.stopPropagation();
            document.querySelector('.dropdown-content').classList.toggle('show');
        });

        window.addEventListener('click', function() {
            document.querySelector('.dropdown-content').classList.remove('show');
        });

        document.querySelector('.dropdown-content').addEventListener('click', function(e) {
            e.stopPropagation();
        });

        const courseCards = document.querySelectorAll('.course-card');
        courseCards.forEach(card => {
            if (!card.classList.contains('add-course-card')) {
                card.addEventListener('click', () => {
                    const courseId = card.getAttribute('data-course-id'); // Assuming you add data-course-id to course cards
                    console.log('Course clicked:', courseId);
                    window.location.href = `/Courses/Details/${courseId}`; // Example navigation
                });
            }
        });

        // Add new course functionality click handler (Example - navigate)
        const addCourseCard = document.querySelector('.add-course-card');
        addCourseCard.addEventListener('click', () => {
             // In a real application, you would navigate to the course creation page
             window.location.href = '/Courses/Create'; // Example navigation to your Create action
            console.log('Add new course clicked');
        });
    </script>
    }

</body>
</html>