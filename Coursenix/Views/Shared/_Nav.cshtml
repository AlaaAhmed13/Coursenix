<nav class="navbar navbar-expand-lg navbar-light bg-white py-3">
    <div class="container">
        <a class="navbar-brand d-flex align-items-center" href="#">
            <div class="logo">
                <img src="/assets/logo.svg" alt="">
            </div>
            <div>
                <span class="word">Coursenix</span>
            </div>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href=@Url.Action("Index", "Home")>Home</a>
                </li>
                <li class="nav-item">
                    @if (User.IsInRole("Teacher"))
                    {
                        <a class="nav-link" href=@Url.Action("Index", "Teacher")>Courses</a>
                    }
                    else if (User.IsInRole("Student"))
                    {
                        <a class="nav-link" href=@Url.Action("Index", "Course")>Courses</a>
                    }
                    else
                    {
                        <a class="nav-link" href=@Url.Action("Index", "Course")>Courses</a>
                    }
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#footer">Contact</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#footer">About</a>
                </li>
            </ul>


            <ul class="navbar-nav ms-auto">


                @if (User.Identity.IsAuthenticated)
                {
                    var name = User.FindFirst("FullName")?.Value;

                    <li class="user-profile" id="userProfile">
                        <span class="username"> @name </span>
                        <div class="user-icon"> @char.ToUpper(name[0]) </div>
                        <div class="dropdown-menu" id="userDropdown">
                            <ul>
                                @if (User.IsInRole("Teacher"))
                                {
                                    <li><a href=@Url.Action("Index", "Teacher")><i class="fas fa-chalkboard-teacher"></i>Dashboard</a></li>
                                    <li><a href=@Url.Action("Settings", "Teacher")><i class="fas fa-cog"></i> Settings</a></li>
                                }
                                else if (User.IsInRole("Student"))
                                {
                                    <li><a href=@Url.Action("Dashboard", "Student")><i class="fas fa-book"></i>Dashboard</a></li>
                                    <li><a href=@Url.Action("Settings", "Student")><i class="fas fa-cog"></i> Settings</a></li>
                                }
                                else
                                {
                                    // Fallback for users without a specific role or other roles
                                    <li><a href=@Url.Action("Index", "Home")><i class="fas fa-home"></i> Home</a></li>
                                }
                                <li class="divider-menu"></li>
                                <li><a href=@Url.Action("Logout", "Account") class="logout-link"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                            </ul>
                        </div>
                    </li>
                }
                else
                {
                    <li class="sign-in-container">
                        <a href=@Url.Action("Login", "Account") class="btn sign-in-btn">Sign in</a>
                    </li>
                }

            </ul>

        </div>

    </div>
</nav>
<script src="~/js/profile-drop-down.js"></script>