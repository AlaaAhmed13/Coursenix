@model Coursenix.Models.ViewModels.CourseDetailsViewModel

@{
    ViewData["Title"] = $"{Model.Subject?.SubjectName} - Course Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    @section css {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="@Url.Content("~/CSS/courseDetailsG7.css")">
    }
</head>
<body>
    <nav class="navbar navbar-expand-lg bg-white py-3 shadow-sm">
        <div class="container d-flex justify-content-between align-items-center">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <div style="width: 40px; height: 40px; background-color: #2ba9a9; color: white; display: flex; align-items: center; justify-content: center; border-radius: 5px; font-weight: bold; margin-right: 10px;">D</div>
                <div>
                    <div style="font-weight: bold;">Dresley</div>
                    <div style="font-size: 0.7rem; color: #666;">Course Booking</div>
                </div>
            </a>

            <ul class="navbar-nav d-flex flex-row gap-3 mx-auto">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="@Url.Action("Index", "Courses")">Courses</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#Footer">Contact</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#Footer">About</a>
                </li>
            </ul>

            <div class="d-flex align-items-center">
                <div class="user-avatar bg-teal text-white rounded-circle d-flex justify-content-center align-items-center" style="width: 35px; height: 35px; font-weight: bold;">M</div>
                <span class="ms-2 user-name">Michael Johnson</span>
            </div>
        </div>
    </nav>

    <main>
        <div class="course-card-wrapper">
            <div class="course-card">

                @if (Model != null && !string.IsNullOrEmpty(Model.RequestMessage))
                {
                    <div class="alert @(Model.RequestSuccessful ? "alert-success" : "alert-danger")" role="alert">
                        @Model.RequestMessage
                    </div>
                }

                @if (Model != null && Model.Subject != null)
                {
                    <div class="row align-items-center mb-4">
                        <div class="col-md-8">
                            <h2>@Model.Subject.SubjectName</h2>
                            <div class="course-info">
                                <span><i class="fas fa-graduation-cap"></i> Grades @Model.Subject.GradeLevel</span>
                                <span><i class="fas fa-calendar"></i> 2 Classes/Week</span>
                                <span><i class="fas fa-map-marker-alt"></i> @Model.Subject.Location</span>
                            </div>
                        </div>
                        <div class="col-md-4 text-md-end">
                            <div class="course-price">@Model.Subject.Price.ToString("C")</div>
                        </div>
                    </div>

                    @if (Model.Subject.Teacher != null)
                    {
                        <div class="teacher-info">
                            <div class="teacher-image">
                                @if (!string.IsNullOrEmpty(Model.Subject.Teacher.ProfilePicture))
                                {
                                    <img src="@Url.Content($"~/images/teachers/{Model.Subject.Teacher.ProfilePicture}")" alt="@Model.Subject.Teacher.Name">
                                }
                                else
                                {
                                    <img src="@Url.Content("~/assets/teacher1.svg")" alt="@Model.Subject.Teacher.Name">
                                }
                            </div>
                            <div>
                                <h5 class="teacher-name">@(Model.Subject.Teacher.Name) @(Model.Subject.Teacher.Name)</h5>
                                @* @if (!string.IsNullOrEmpty(Model.Subject.Teacher.Biography))
                                {
                                    <p class="teacher-title">@Model.Subject.Teacher.Biography</p>
                                }
                                else
                                {
                                    <p class="teacher-title">Mathematics Teacher with 10+ years of experience</p>
                                } *@
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="teacher-info">
                            <p>Teacher information not available for this course.</p>
                        </div>
                    }

                    <hr>

                    <h4 class="mb-3">Choose your Grade</h4>
                    <div class="grade-tabs">
                        <div class="grade-tab active">Grade 7</div>
                        <div class="grade-tab">Grade 8</div>
                        <div class="grade-tab">Grade 9</div>
                    </div>

                    <p class="mb-4">Select one of the available groups for Grade @Model.Subject.GradeLevel below to enroll in this course.</p>

                    <form asp-controller="Courses" asp-action="Enroll" method="post">
                        <input type="hidden" name="subjectId" value="@Model.Subject.SubjectId" />
                        <input type="hidden" id="selectedGroupId" name="selectedGroupId" value="@Model.SelectedGroupId" />

                        <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                        @if (Model.Groups != null && Model.Groups.Any())
                        {
                            @foreach (var group in Model.Groups)
                            {
                                <div class="group-card @(Model.SelectedGroupId == group.GroupId ? "selected" : "")" data-group-id="@group.GroupId" id="group-card-@group.GroupId">
                                    <h5 class="group-title">Group @group.GroupId</h5>
                                    <ul class="group-details">
                                        <li>@group.DayOfWeek</li>
                                        <li>@($"{group.StartTime:h:mm tt}") - @($"{group.EndTime:h:mm tt}")</li>
                                    </ul>

                                    @{
                                        int remainingSeats = group.TotalSeats - group.EnrolledStudentsCount;
                                        string seatsBadgeClass = "seats-available";

                                        if (remainingSeats <= 0)
                                        {
                                            seatsBadgeClass = "seats-full";
                                        }
                                        else if (remainingSeats <= 5 && remainingSeats > 0)
                                        {
                                            seatsBadgeClass = "only_n_available";
                                        }
                                    }
                                    <span class="seats-badge @seatsBadgeClass">
                                        @if (remainingSeats <= 0)
                                        {
                                            <span>Seats are Full</span>
                                        }
                                        else if (remainingSeats <= 5 && remainingSeats > 0)
                                        {
                                            <span>Only @remainingSeats seats</span>
                                        }
                                        else if (remainingSeats > 5)
                                        {
                                            <span>@remainingSeats seats available</span>
                                        }
                                        else
                                        {
                                            <span>Check availability</span>
                                        }
                                    </span>

                                    <div class="radio-button @(Model.SelectedGroupId == group.GroupId ? "selected" : "")"></div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No groups available for this course at the moment.</p>
                        }

                        <div class="mt-4 text-end">
                            <button type="submit" class="enroll-btn">Enroll</button>
                        </div>
                    </form>

                }
                else
                {
                    <p>Course details not found.</p>
                }
            </div>
        </div>
    </main>

    <footer class="footer" id="Footer">
        <div class="container">
            <div class="footer-columns">
                <div class="footer-column">
                    <h3>Coursenix</h3>
                    <p>
                        Simplifying the educational flow between students and teachers
                    </p>
                </div>

                <div class="footer-column">
                    <h3>Follow Us</h3>
                    <div class="social-links">
                        <a href="#" class="social-link">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 width="20"
                                 height="20"
                                 viewBox="0 0 24 24"
                                 fill="#fff">
                                <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z" />
                            </svg>
                        </a>
                        <a href="#" class="social-link">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 width="20"
                                 height="20"
                                 viewBox="0 0 24 24"
                                 fill="#fff">
                                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z" />
                            </svg>
                        </a>
                        <a href="#" class="social-link">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 width="20"
                                 height="20"
                                 viewBox="0 0 24 24"
                                 fill="#fff">
                                <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z" />
                            </svg>
                        </a>
                    </div>
                </div>

                <div class="footer-column">
                    <h3>Contact us</h3>
                    <p>Phone number: +20 1048725304</p>
                    <p>Email: Coursenix@Coursenix.com</p>
                </div>
            </div>

            <div class="copyright">
                <p>© 2025 Coursenix. All Rights reserved.</p>
            </div>
        </div>
    </footer>

    @section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.querySelectorAll('.group-card').forEach(card => {
            card.addEventListener('click', function() {
                if (this.querySelector('.seats-full')) {
                    console.log("Cannot select a full group.");
                    return;
                }

                document.querySelectorAll('.group-card').forEach(c => {
                    c.classList.remove('selected');
                    const radioButton = c.querySelector('.radio-button');
                    if (radioButton) {
                         radioButton.classList.remove('selected');
                    }
                });

                this.classList.add('selected');
                const selectedRadioButton = this.querySelector('.radio-button');
                if (selectedRadioButton) {
                     selectedRadioButton.classList.add('selected');
                }

                const selectedGroupIdInput = document.getElementById('selectedGroupId');
                if (selectedGroupIdInput) {
                    selectedGroupIdInput.value = this.getAttribute('data-group-id');
                    console.log(`Selected Group ID: ${selectedGroupIdInput.value}`);
                } else {
                     console.error("Hidden input #selectedGroupId not found!");
                }
            });
        });

        document.querySelectorAll('.grade-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.grade-tab').forEach(t => {
                    t.classList.remove('active');
                });
                this.classList.add('active');
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            const firstAvailableGroupCard = document.querySelector('.group-card:not(.seats-full)');
            if (firstAvailableGroupCard) {
                 firstAvailableGroupCard.click();
            }
        });
    </script>
    }
</body>
</html>