@* In the Views/Courses folder *@
@* Views/Courses/Details.cshtml *@
@model Coursenix.Models.ViewModels.CourseDetailsViewModel

@*
    **ملاحظة هامة:** هذا الملف يحتوي على هيكل HTML كامل (<html>, <head>, <body>, Header, Footer).
    هذا الأسلوب ليس الممارسة القياسية في ASP.NET Core MVC، حيث يُفضل وضع الهيكل المشترك (Header, Footer, <head>, <body>) في ملف Layout مشترك (_Layout.cshtml) واستخدام @RenderBody() لعرض محتوى الـ View.

    تم دمج الكود هنا ليتناسب مع الهيكل الكامل الذي قدمته ويحقق طلبك بـ "عدم تغيير أي شيء من هذا".
    للحصول على أفضل تنظيم وقابلية لإعادة الاستخدام، يُنصح بشدة بنقل الهيدر والفوتر إلى ملف Layout مشترك واستخدام هذا الـ View للمحتوى الرئيسي فقط.
*@

@{
    // تعيين عنوان الصفحة ديناميكياً باستخدام اسم الدورة من الـ ViewModel
    ViewData["Title"] = $"{Model.Subject?.SubjectName} - Course Details";

    // تم إزالة السطر Layout = "_Layout"; لأن هذا الـ View يحتوي على هيكل HTML كامل ولا يستخدم Layout
    // Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @* تم تكرار هذا الـ viewport tag في الـ HTML الأصلي، لا حاجة لتكراره *|
    @* <meta name="viewport" content="width=device-width, initial-scale=1.0"> *@

    @* استخدام ViewData["Title"] لتعيين عنوان الصفحة ديناميكياً *@
    <title>@ViewData["Title"]</title>

    @* تضمين ملفات CSS الضرورية. استخدم Url.Content("~/...") للمسارات نسبة إلى مجلد wwwroot *@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="@Url.Content("~/CSS/courseDetailsG7.css")">

    @* إذا كان لديك أي عناصر أخرى في <head> من الـ HTML الأصلي، أضفها هنا *@

    @* تم إزالة القسم @section css { ... } لأنه لم يعد هناك Layout يقوم بعرضه. *@
</head>
<body>
    @*
        *** بداية الهيكل الكامل لصفحة HTML، بما في ذلك Header، المحتوى الرئيسي، والـ Footer ***
    *@

    <!-- Navbar - تم نقل هذا القسم من الـ HTML الكامل الذي قدمته -->
    @* هذا الـ Navbar يحتوي على Style مضمن (inline) و Classes من Bootstrap *@
    <nav class="navbar navbar-expand-lg bg-white py-3 shadow-sm">
      <div class="container d-flex justify-content-between align-items-center">
        <!-- Logo -->
        @* تحديث مسار الصورة باستخدام Url.Content *@
        <a class="navbar-brand d-flex align-items-center" href="#">
          @* استخدم Style مضمن كما في الـ HTML الأصلي *@
          <div style="width: 40px; height: 40px; background-color: #2ba9a9; color: white; display: flex; align-items: center; justify-content: center; border-radius: 5px; font-weight: bold; margin-right: 10px;">D</div>
          <div>
            <div style="font-weight: bold;">Dresley</div>
            <div style="font-size: 0.7rem; color: #666;">Course Booking</div>
          </div>
        </a>

        <!-- Nav links -->
        @* عدّل روابط التنقل لاستخدام Tag Helpers أو Url.Action *@
        <ul class="navbar-nav d-flex flex-row gap-3 mx-auto">
          <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="@Url.Action("Index", "Courses")">Courses</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#Footer">Contact</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#Footer">About</a>
          </li>
        </ul>

        <!-- User info - ثابت في الـ HTML الأصلي. يتطلب نظام مصادقة (Authentication) لجعله ديناميكياً. -->
        <div class="d-flex align-items-center">
          <div class="user-avatar bg-teal text-white rounded-circle d-flex justify-content-center align-items-center" style="width: 35px; height: 35px; font-weight: bold;">M</div>
          <span class="ms-2 user-name">Michael Johnson</span>
        </div>
      </div>
    </nav>


    <!-- Main Content Area -->
    <main>

    <!-- Main Course Card -->
    <div class="course-card-wrapper">
        <div class="course-card">

            @* **بداية عرض رسائل النجاح أو الخطأ المتعلقة بعملية الطلب/التسجيل** *@
            @* نتحقق إذا كان الـ Model موجوداً وأن هناك رسالة لعرضها *@
            @if (Model != null && !string.IsNullOrEmpty(Model.RequestMessage))
            {
                @* نستخدم خاصية RequestSuccessful لتحديد إذا كانت رسالة نجاح أم خطأ *@
                <div class="alert @(Model.RequestSuccessful ? "alert-success" : "alert-danger")" role="alert">
                    @Model.RequestMessage @* عرض نص الرسالة الديناميكي *@
                </div>
            }
            @* نهاية عرض رسائل العملية *|


            @* بداية عرض بيانات الدورة والمدرس والمجموعات بشكل ديناميكي *@
            @* نتحقق أولاً من أن الـ Model موجوداً وأن Subject موجود فيه *@
            @if (Model != null && Model.Subject != null)
            {
                <div class="row align-items-center mb-4">
                    <div class="col-md-8">
                        <h2>@Model.Subject.SubjectName</h2> @* **اسم الدورة ديناميكي** *@
                        <div class="course-info">
                            @* عرض مستوى الصف ديناميكياً *@
                            <span><i class="fas fa-graduation-cap"></i> Grades @Model.Subject.GradeLevel</span> @* **مستوى الصف ديناميكي** *@
                            @* عدد الفصول في الأسبوع وتفاصيل أخرى (إذا لم تكن في نموذج Subject/Group، ستبقى ثابتة أو تحتاج لإضافتها) *@
                            <span><i class="fas fa-calendar"></i> 2 Classes/Week</span> @* ثابت *@
                            @* عرض الموقع ديناميكياً *|
                            <span><i class="fas fa-map-marker-alt"></i> @Model.Subject.Location</span> @* **الموقع ديناميكي** *@
                        </div>
                    </div>
                    <div class="col-md-4 text-md-end">
                        @* عرض السعر ديناميكياً وتنسيقه كعملة *@
                        <div class="course-price">@Model.Subject.Price.ToString("C")</div> @* **السعر ديناميكي** *@
                    </div>
                </div>

                @* عرض معلومات المدرس بشكل ديناميكي *@
                @* نتحقق إذا كان كائن المدرس موجوداً *@
                @if (Model.Subject.Teacher != null)
                {
                    <div class="teacher-info">
                        <div class="teacher-image">
                             @* عرض صورة المدرس. استخدم Url.Content. إذا أضفت خاصية ProfilePicture للمدرس، استخدمها. وإلا، استخدم صورة افتراضية. *@
                             @if (!string.IsNullOrEmpty(Model.Subject.Teacher.ProfilePicture))
                             {
                                 <img src="@Url.Content($"~/images/teachers/{Model.Subject.Teacher.ProfilePicture}")" alt="@Model.Subject.Teacher.Name">
                             }
                             else
                             {
                                 @* استخدام مسار نسبي لصورة مدرس افتراضية *@
                                <img src="@Url.Content("~/assets/teacher1.svg")" alt="@Model.Subject.Teacher.Name">
                             }
                        </div>
                        <div>
                            @* عرض اسم المدرس ديناميكياً *@
                            <h5 class="teacher-name">@(Model.Subject.Teacher.Name) </h5> 
                            
                        </div>
                    </div>
                }
                else
                {
                    <div class="teacher-info">
                         <p>Teacher information not available for this course.</p>
                    </div>
                }


                <hr>

                 <h4 class="mb-3">Choose your Grade</h4>
                 <div class="grade-tabs">
                     <div class="grade-tab active">Grade 7</div>
                     <div class="grade-tab">Grade 8</div>
                     <div class="grade-tab">Grade 9</div>
                 </div>

                <p class="mb-4">Select one of the available groups for Grade @Model.Subject.GradeLevel below to enroll in this course.</p> @* **مستوى الصف ديناميكي** *@


                <form asp-controller="Courses" asp-action="Enroll" method="post">
                    <input type="hidden" name="subjectId" value="@Model.Subject.SubjectId" />
                   
                    <input type="hidden" id="selectedGroupId" name="selectedGroupId" value="@Model.SelectedGroupId" /> @* استخدم @Model.SelectedGroupId لتعيين القيمة الافتراضية أو عند العودة مع خطأ *@

                   <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

 @if (Model.Groups != null && Model.Groups.Any())
                    {
                        @foreach (var group in Model.Groups) // **هنا يتم تعريف المتغير 'group'**
                        {
                            <div class="group-card @(Model.SelectedGroupId == group.GroupId ? "selected" : "")" data-group-id="@group.GroupId" id="group-card-@group.GroupId"> @* **GroupId ديناميكي كـ data attribute وكـ ID** *@
                                @* عنوان المجموعة *@
                                @* **تأكد من أن نموذج Group يحتوي على خاصية GroupId** *@
                                <h5 class="group-title">Group @group.GroupId</h5> @* **GroupId ديناميكي كعنوان** *@
                                <ul class="group-details">
                                    <li>@group.DayOfWeek</li> @* **يوم(أيام) ديناميكي** *@
                                    <li>@($"{group.StartTime:h:mm tt}") - @($"{group.EndTime:h:mm tt}")</li> @* **أوقات ديناميكية** *@
                                </ul>

                                @* حالة المقاعد ديناميكياً *@
                                @{
                                     @* **تأكد من أن نموذج Group يحتوي على خصائص TotalSeats و EnrolledStudentsCount** *@
                                     int remainingSeats = group.TotalSeats - group.EnrolledStudentsCount;
                                     string seatsBadgeClass = "seats-available"; // Class افتراضي

                                     if (remainingSeats <= 0)
                                     {
                                         seatsBadgeClass = "seats-full";
                                     }
                                     else if (remainingSeats <= 5 && remainingSeats > 0)
                                     {
                                         seatsBadgeClass = "only_n_available";
                                     }
                                }
                                @* تطبيق الـ Class المناسب بناءً على عدد المقاعد المتبقية *@
                                <span class="seats-badge @seatsBadgeClass">
                                     @if (remainingSeats <= 0)
                                     {
                                         <span>Seats are Full</span>
                                     }
                                     else if (remainingSeats <= 5 && remainingSeats > 0)
                                     {
                                         <span>Only @remainingSeats seats</span>
                                     }
                                     else if (remainingSeats > 5)
                                     {
                                         <span>@remainingSeats seats available</span>
                                     }
                                      else // حالة أخرى (عدد سالب مثلاً)
                                     {
                                          <span>Check availability</span>
                                     }
                                </span>

                                @* Radio button / Selection indicator (يعتمد على JS) *@
                                @* تطبيق الـ class "selected" إذا كانت هذه هي المجموعة المختارة في الـ Model *@
                                <div class="radio-button @(Model.SelectedGroupId == group.GroupId ? "selected" : "")"></div>
                            </div>
                        }
                        @* **نهاية حلقة التكرار @foreach** *@

                    }
                    else
                    {
                         @* رسالة تعرض إذا لم يتم العثور على مجموعات لهذه الدورة *@
                         <p>No groups available for this course at the moment.</p>
                    }
                    @* **نهاية عرض قائمة المجموعات بشكل ديناميكي** *@


                     @* زر Enroll. هو زر إرسال النموذج. *@
                     <div class="mt-4 text-end">
                         <button type="submit" class="enroll-btn">Enroll</button>
                     </div>
                 </form> @* **تأكد من وجود علامة إغلاق </form> مطابقة هنا** *@
                @* **نهاية نموذج HTML لعملية التسجيل** *@


            }
            else
            {
                 @* رسالة تعرض إذا لم يتم العثور على الدورة بالـ ID المحدد *@
                 <p>Course details not found.</p>
            }
            @* نهاية عرض بيانات الدورة والمدرس والمجموعات *@

        </div>
    </div>

    </main> @* نهاية علامة <main> *@


    <!-- Footer - تم نقل هذا القسم من الـ HTML الكامل الذي قدمته -->
    @* إذا كان الفوتر في Layout مشترك، قم بإزالته من هنا *@
    <footer class="footer" id="Footer">
        <div class="container">
          <div class="footer-columns">
            <div class="footer-column">
              <h3>Coursenix</h3>
              <p>
                Simplifying the educational flow between students and teachers
              </p>
            </div>

            <div class="footer-column">
              <h3>Follow Us</h3>
              <div class="social-links">
                <a href="#" class="social-link">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="#fff"
                  >
                    <path
                      d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"
                    />
                  </svg>
                </a>
                <a href="#" class="social-link">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="#fff"
                  >
                    <path
                      d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"
                    />
                  </svg>
                </a>
                <a href="#" class="social-link">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="#fff"
                  >
                    <path
                      d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"
                    />
                  </svg>
                </a>
              </div>
            </div>

            <div class="footer-column">
              <h3>Contact us</h3>
              <p>Phone number: +20 1048725304</p>
              <p>Email: Coursenix@Coursenix.com</p>
            </div>
          </div>

          <div class="copyright">
            <p>© 2025 Coursenix. All Rights reserved.</p>
          </div>
        </div>
      </footer>

    @* تضمين ملفات JavaScript الضرورية. Bootstrap bundle يتضمن Popper.js *@
    @* إذا كان لديك ملفات JS أخرى في Layout، أزلها من هنا *@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    @* تضمين كود JavaScript الذي قدمته في الـ HTML الأصلي *@
    <script>
        // Group selection functionality
        // هذا الـ Script يعالج النقر على Group Cards لتحديدها بصرياً
        // ويقوم بتخزين GroupId في الحقل المخفي لتجهيزه للإرسال مع نموذج التسجيل
        document.querySelectorAll('.group-card').forEach(card => {
            card.addEventListener('click', function() {
                // لا تسمح بالاختيار إذا كانت المقاعد ممتلئة
                if (this.querySelector('.seats-full')) {
                    console.log("Cannot select a full group.");
                    // يمكنك إضافة رسالة تحذير بسيطة للمستخدم هنا
                    return;
                }

                // إزالة الـ class "selected" من جميع الـ Group Cards والـ radio-buttons الخاصة بها
                document.querySelectorAll('.group-card').forEach(c => {
                    c.classList.remove('selected');
                    const radioButton = c.querySelector('.radio-button');
                    if (radioButton) {
                         radioButton.classList.remove('selected');
                    }
                });

                // إضافة الـ class "selected" إلى الـ Group Card التي تم النقر عليها والـ radio-button الخاصة بها
                this.classList.add('selected');
                const selectedRadioButton = this.querySelector('.radio-button');
                if (selectedRadioButton) {
                     selectedRadioButton.classList.add('selected');
                }


                // **الخطوة الأهم:** تحديث قيمة الحقل المخفي الذي سيتم إرساله مع النموذج
                // تأكد أن الـ ID هنا (#selectedGroupId) يتطابق مع الـ ID في الحقل المخفي في الـ HTML
                const selectedGroupIdInput = document.getElementById('selectedGroupId');
                if (selectedGroupIdInput) {
                    // نقوم بتعيين قيمة الحقل المخفي إلى رقم معرف المجموعة (الموجود في data-group-id لهذا الـ card)
                    selectedGroupIdInput.value = this.getAttribute('data-group-id');
                    console.log(`Selected Group ID: ${selectedGroupIdInput.value}`); // تسجيل للتأكد
                } else {
                     console.error("Hidden input #selectedGroupId not found!"); // رسالة خطأ إذا لم يتم العثور على الحقل
                }
            });
        });

        document.querySelectorAll('.grade-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.grade-tab').forEach(t => {
                    t.classList.remove('active');
                });
                this.classList.add('active');

            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            // البحث عن أول Group Card ليس لديه class "seats-full"
            const firstAvailableGroupCard = document.querySelector('.group-card:not(.seats-full)');
            // إذا تم العثور على مجموعة متاحة، قم بـ "محاكاة" النقر عليها لاختيارها وتحديث الحقل المخفي
            if (firstAvailableGroupCard) {
                 firstAvailableGroupCard.click(); // محاكاة النقر لتشغيل منطق الاختيار وتحديث الحقل المخفي
            }
        });

    </script>

</body>
</html>