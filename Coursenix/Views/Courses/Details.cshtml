@model Coursenix.ViewModels.CourseDetailsViewModel

@{
    ViewData["Title"] = $"{Model.Subject?.SubjectName} - Course Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    @section css {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="@Url.Content("~/CSS/courseDetailsG7.css")">
    }
</head>
<body>
    <nav class="navbar navbar-expand-lg bg-white py-3 shadow-sm">
        <div class="container d-flex justify-content-between align-items-center">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <div style="width: 40px; height: 40px; background-color: #2ba9a9; color: white; display: flex; align-items: center; justify-content: center; border-radius: 5px; font-weight: bold; margin-right: 10px;">D</div>
                <div>
                    <div style="font-weight: bold;">Dresley</div>
                    <div style="font-size: 0.7rem; color: #666;">Course Booking</div>
                </div>
            </a>

            <ul class="navbar-nav d-flex flex-row gap-3 mx-auto">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="@Url.Action("Index", "Courses")">Courses</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#Footer">Contact</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#Footer">About</a>
                </li>
            </ul>

            <div class="d-flex align-items-center">
                <div class="user-avatar bg-teal text-white rounded-circle d-flex justify-content-center align-items-center" style="width: 35px; height: 35px; font-weight: bold;">M</div>
                <span class="ms-2 user-name">Michael Johnson</span>
            </div>
        </div>
    </nav>

    <main>
        <div class="course-card-wrapper">
            <div class="course-card">

                @if (Model != null && !string.IsNullOrEmpty(Model.RequestMessage))
                {
                    <div class="alert @(Model.RequestSuccessful ? "alert-success" : "alert-danger")" role="alert">
                        @Model.RequestMessage
                    </div>
                }

                @if (Model != null && Model.Subject != null)
                {
                    <div class="row align-items-center mb-4">
                        <div class="col-md-8">
                            <h2>@Model.Subject.SubjectName</h2>
                            <div class="course-info">
                                <span><i class="fas fa-graduation-cap"></i> Grades @Model.Subject.GradeLevel</span>
                                <span><i class="fas fa-calendar"></i> 2 Classes/Week</span>
                                <span><i class="fas fa-map-marker-alt"></i> @Model.Subject.Location</span>
                            </div>
                        </div>
                        <div class="col-md-4 text-md-end">
                            <div class="course-price">@Model.Subject.Price.ToString("C")</div>
                        </div>
                    </div>

                    @if (Model.Subject.Teacher != null)
                    {
                        <div class="teacher-info">
                            <div class="teacher-image">
                                @if (!string.IsNullOrEmpty(Model.Subject.Teacher.ProfilePicture))
                                {
                                    <img src="@Url.Content($"~/images/teachers/{Model.Subject.Teacher.ProfilePicture}")" alt="@Model.Subject.Teacher.Name">
                                }
                                else
                                {
                                    <img src="@Url.Content("~/assets/teacher1.svg")" alt="@Model.Subject.Teacher.Name">
                                }
                            </div>
                            <div>
                                <h5 class="teacher-name">@(Model.Subject.Teacher.Name) @(Model.Subject.Teacher.Name)</h5>
                                @* @if (!string.IsNullOrEmpty(Model.Subject.Teacher.Biography))
                                {
                                    <p class="teacher-title">@Model.Subject.Teacher.Biography</p>
                                }
                                else
                                {
                                    <p class="teacher-title">Mathematics Teacher with 10+ years of experience</p>
                                } *@
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="teacher-info">
                            <p>Teacher information not available for this course.</p>
                        </div>
                    }

                    <hr>

                    <h4 class="mb-3">Choose your Grade</h4>
                    <div class="grade-tabs">
                        <div class="grade-tab active">Grade 7</div>
                        <div class="grade-tab">Grade 8</div>
                        <div class="grade-tab">Grade 9</div>
                    </div>

                    <p class="mb-4">Select one of the available groups for Grade @Model.Subject.GradeLevel below to enroll in this course.</p>

                    <form asp-controller="Courses" asp-action="Enroll" method="post">
                        <input type="hidden" name="subjectId" value="@Model.Subject.Id" />
                        <input type="hidden" id="selectedGroupId" name="selectedGroupId" value="@Model.SelectedGroupId" />

                        <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                        @if (Model.Groups != null && Model.Groups.Any())
                        {
                            @foreach (var group in Model.Groups)
                            {
                                <div class="group-card @(Model.SelectedGroupId == group.Id ? "selected" : "")" data-group-id="@group.Id" id="group-card-@group.Id">
                                    <h5 class="group-title">Group @group.Id</h5>
                                    <ul class="group-details">
                                        <li>@group.DayOfWeek</li>
                                        <li>@($"{group.StartTime:h:mm tt}") - @($"{group.EndTime:h:mm tt}")</li>
                                    </ul>

                                    @{
                                        int remainingSeats = group.TotalSeats - group.EnrolledStudentsCount;
                                        string seatsBadgeClass = "seats-available";

                                        if (remainingSeats <= 0)
                                        {
                                            seatsBadgeClass = "seats-full";
                                        }
                                        else if (remainingSeats <= 5 && remainingSeats > 0)
                                        {
                                            seatsBadgeClass = "only_n_available";
                                        }
                                    }
                                    <span class="seats-badge @seatsBadgeClass">
                                        @if (remainingSeats <= 0)
                                        {
                                            <span>Seats are Full</span>
                                        }
                                        else if (remainingSeats <= 5 && remainingSeats > 0)
                                        {
                                            <span>Only @remainingSeats seats</span>
                                        }
                                        else if (remainingSeats > 5)
                                        {
                                            <span>@remainingSeats seats available</span>
                                        }
                                        else
                                        {
                                            <span>Check availability</span>
                                        }
                                    </span>

                                    <div class="radio-button @(Model.SelectedGroupId == group.Id ? "selected" : "")"></div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No groups available for this course at the moment.</p>
                        }

                        <div class="mt-4 text-end">
                            <button type="submit" class="enroll-btn">Enroll</button>
                        </div>
                    </form>

                }
                else
                {
                    <p>Course details not found.</p>
                }
            </div>
        </div>
    </main>

  

    @section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.querySelectorAll('.group-card').forEach(card => {
            card.addEventListener('click', function() {
                if (this.querySelector('.seats-full')) {
                    console.log("Cannot select a full group.");
                    return;
                }

                document.querySelectorAll('.group-card').forEach(c => {
                    c.classList.remove('selected');
                    const radioButton = c.querySelector('.radio-button');
                    if (radioButton) {
                         radioButton.classList.remove('selected');
                    }
                });

                this.classList.add('selected');
                const selectedRadioButton = this.querySelector('.radio-button');
                if (selectedRadioButton) {
                     selectedRadioButton.classList.add('selected');
                }

                const selectedGroupIdInput = document.getElementById('selectedGroupId');
                if (selectedGroupIdInput) {
                    selectedGroupIdInput.value = this.getAttribute('data-group-id');
                    console.log(`Selected Group ID: ${selectedGroupIdInput.value}`);
                } else {
                     console.error("Hidden input #selectedGroupId not found!");
                }
            });
        });

        document.querySelectorAll('.grade-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.grade-tab').forEach(t => {
                    t.classList.remove('active');
                });
                this.classList.add('active');
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            const firstAvailableGroupCard = document.querySelector('.group-card:not(.seats-full)');
            if (firstAvailableGroupCard) {
                 firstAvailableGroupCard.click();
            }
        });
    </script>
    }
</body>
</html>