// <auto-generated />
using System;
using Coursenix.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coursenix.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250518153612_adding")]
    partial class adding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Coursenix.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Coursenix.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Coursenix.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnrolledStudentsCount")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            DayOfWeek = "Monday & Wednesday",
                            EndTime = new DateTime(2025, 5, 18, 10, 30, 0, 0, DateTimeKind.Local),
                            EnrolledStudentsCount = 0,
                            Grade = 8,
                            GroupName = "Math Group A",
                            Location = "Room 101",
                            StartTime = new DateTime(2025, 5, 18, 9, 0, 0, 0, DateTimeKind.Local),
                            SubjectId = 1,
                            TotalSeats = 25
                        },
                        new
                        {
                            GroupId = 2,
                            DayOfWeek = "Tuesday & Thursday",
                            EndTime = new DateTime(2025, 5, 18, 15, 30, 0, 0, DateTimeKind.Local),
                            EnrolledStudentsCount = 0,
                            Grade = 8,
                            GroupName = "Math Group B",
                            Location = "Room 101",
                            StartTime = new DateTime(2025, 5, 18, 14, 0, 0, 0, DateTimeKind.Local),
                            SubjectId = 1,
                            TotalSeats = 25
                        });
                });

            modelBuilder.Entity("Coursenix.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SessionDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("GroupId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Coursenix.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParentNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Email = "alice.smith@example.com",
                            Grade = 0,
                            GradeLevel = 8,
                            Name = "Alice",
                            ParentNumber = "555-1111",
                            Password = "asdfsadfasdf",
                            PhoneNumber = "555-9876"
                        },
                        new
                        {
                            StudentId = 2,
                            Email = "bob.j@example.com",
                            Grade = 0,
                            GradeLevel = 7,
                            Name = "Bob",
                            ParentNumber = "555-2222",
                            Password = "sdfasdf",
                            PhoneNumber = "555-4321"
                        });
                });

            modelBuilder.Entity("Coursenix.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StudentsPerGroup")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            Description = "Comprehensive math course for grade 8.",
                            GradeLevel = 8,
                            Location = "Room 101",
                            Price = 150m,
                            StudentsPerGroup = 25,
                            SubjectName = "Mathematics",
                            TeacherId = 1,
                            ThumbnailFileName = "asdfasdfasd"
                        },
                        new
                        {
                            SubjectId = 2,
                            Description = "Interactive science lessons for grade 7.",
                            GradeLevel = 7,
                            Location = "Lab B",
                            Price = 180m,
                            StudentsPerGroup = 20,
                            SubjectName = "Science",
                            TeacherId = 2,
                            ThumbnailFileName = "Asdfasdf"
                        });
                });

            modelBuilder.Entity("Coursenix.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Email = "jane.doe@example.com",
                            Name = "Jane",
                            Password = "Password",
                            PhoneNumber = "555-1234",
                            ProfilePicture = "asdfasdf"
                        },
                        new
                        {
                            TeacherId = 2,
                            Email = "john.smith@example.com",
                            Name = "John",
                            Password = "asdf",
                            PhoneNumber = "555-5678",
                            ProfilePicture = "asdfasdf"
                        });
                });

            modelBuilder.Entity("Coursenix.Models.Attendance", b =>
                {
                    b.HasOne("Coursenix.Models.Session", "Session")
                        .WithMany("Attendances")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursenix.Models.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Coursenix.Models.Booking", b =>
                {
                    b.HasOne("Coursenix.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursenix.Models.Student", "Student")
                        .WithMany("Bookings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursenix.Models.Subject", null)
                        .WithMany("Bookings")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Coursenix.Models.Group", b =>
                {
                    b.HasOne("Coursenix.Models.Subject", "Subject")
                        .WithMany("Groups")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursenix.Models.Teacher", null)
                        .WithMany("Groups")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Coursenix.Models.Session", b =>
                {
                    b.HasOne("Coursenix.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Coursenix.Models.Subject", b =>
                {
                    b.HasOne("Coursenix.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Coursenix.Models.Session", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("Coursenix.Models.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Coursenix.Models.Subject", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Coursenix.Models.Teacher", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
